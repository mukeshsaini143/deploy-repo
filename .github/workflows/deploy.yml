name: Deploy to EC2

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout deploy repo
        uses: actions/checkout@v4

      # (Optional) Copy compose/env to EC2 so the server always stays in sync with this repo
      - name: Upload compose & env to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml,.env"
          target: "~/app"
          overwrite: true
          strip_components: 0
          # If you don't keep .env in repo, remove it from 'source'

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app
            # login only if your Docker Hub images are PRIVATE (otherwise skip)
            if [ -n "${DOCKER_USERNAME}" ] && [ -n "${DOCKER_PASSWORD}" ]; then
              echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
            fi

            # Try docker compose v2, fallback to docker-compose
            if docker compose version >/dev/null 2>&1; then
              docker compose pull
              docker compose up -d
            else
              docker-compose pull
              docker-compose up -d
            fi
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}   # only if private images
          DOCKERHUB_TOKEN: ${{ secrets.DOCKER_PASSWORD }}         # only if private images
